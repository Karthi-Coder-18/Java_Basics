Java Garbage Collection :

1. Each time an object is created in Java it gets stored in Heap also called as Garbage Collection Heap !!

2. when we create an object, java allocates the required memory for that object based on the requirement. Once the JVM finds that we are running on the low memory , it will check for the objects which are not being used.

3. If an object is not used it is eligible for Garbage collection. Garbage Collector will run, throw out the unreachable objects, and free up the space so that the space can be reused.



Difference between Object and a class

# A class is an blueprint of an object

# It tells the JVM how to make an object of that class type. Each object created from that respective class will have it's own values for the variables of the class.

# THINGS that an object knows about itself is called as INSTANCE VARIABLES [ STATE of an object ]

# THINGS that an object can do is called as METHODS [ BEHAVIOUR of an Object ]

# A class can EXTEND another class and use all the variables & Override the methods inside it.

# SUPER CLASS : Which have the required variables and the Methods

# SUB CLASS : Which inherits all the attributes for the SUPER or PARENT class.

# At run time a Java program is nothing but objects talking to one another.


4.  Whenever an object is created then the reference variable of that object will be stored in Garbage collectible Heap

Ex: Cricket team  = new Cricket();

   # here 'team' is an reference variable which is referring to an object called Cricket. [ Cricket is basically an Class , in order to use the instance variables and methods of a class in java we create objects ]

5. If there is no reference variable assigned or referring towards an existing object then that object is unreachable and eligible for Garbage Collection

6. Even if the reference variable has no object assigned and it is assigned with an NULL value then it is still eligible to be assigned with an object.



Using an Existing Object as an Reference to create another object / Assigning already created object to another element inside an array.

# we can create an array of objects and assign objects to each and every element inside the array. instead of assigning a new object everytime we can even assign already created reference variable to a new variable.



Arguments & Parameters for an Method in Java [ You can send things into a Method / We can also send more than one thing to a method ]

1. The methods depends upon the instance variables defined in the class.

2. Parameters : When we create an Method inside a class then we can assign parameters to that method inside it's body.

3. Arguments : When we create an object of a class & use the method or call the method then we need to assign values to the method's parameters. Those values are Arguments.

4. We can assign multiple parameters to an method. All we have to do is to separate those parameters with an Comma.

5. When a parameter is assigned to an method it does have it's own data type. When a Argument value is passed to the method it should be of same data type.

6. You can pass variables into a method, as long as the variable type matches the parameter type. Create local variables or global variables of same type and pass it inside the method.



Return Type for Methods in java [ You can get things back from methods ]

1. Void : The void type doesn't return any value when the method is called.

2. But we can declare a method to return specific type to return back to us. [ Byte, char, Short, int, long, float, double ]

3.






































